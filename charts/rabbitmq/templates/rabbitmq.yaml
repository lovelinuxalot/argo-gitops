{{ $namespace := .Values.namespace }}
{{ $cluster := .Values.cluster }}
apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: "{{ .Values.cluster }}"
  namespace: "{{ .Values.namespace }}"
spec:
  replicas: {{ .Values.replicas }}
  persistence:
    {{ toYaml .Values.persistence | nindent 4}}
  rabbitmq:
    additionalPlugins:
      - rabbitmq_shovel
      - rabbitmq_shovel_management
---
{{- range $i, $vhost := .Values.vhosts }}
apiVersion: rabbitmq.com/v1beta1
kind: Vhost
metadata:
  name: "{{ $vhost.name }}"
  namespace: "{{ $namespace }}"
spec:
  name: "{{ $namespace }}"
  rabbitmqClusterReference:
    name: "{{ $cluster }}"
    namespace: "{{ $namespace }}"
{{- range $i, $exchange := $vhost.exchanges }}
---
apiVersion: rabbitmq.com/v1beta1
kind: Exchange
metadata:
  name: "{{ $exchange.name }}"
  namespace: "{{ $namespace }}"
spec:
  name: "{{ $exchange.name }}"
  type: "{{ $exchange.type | default "fanout" }}"
  autoDelete: {{ $exchange.autoDelete | default false }}
  durable: {{ $exchange.durable | default false }}
  rabbitmqClusterReference:
    name: "{{ $cluster }}"
    namespace: "{{ $namespace }}"
  vhost: "{{ $vhost.name }}"
{{ end -}}
{{- range $i, $queue := $vhost.queues }}
---
apiVersion: rabbitmq.com/v1beta1
kind: Queue
metadata:
  name: "{{ $queue.name }}"
  namespace: "{{ $namespace }}"
spec:
  name: "{{ $queue.name }}"
  autoDelete: {{ $queue.autoDelete | default false }}
  durable: {{ $queue.durable | default false }}
  rabbitmqClusterReference:
    name: "{{ $cluster }}"
    namespace: "{{ $namespace }}"
  vhost: "{{ $vhost.name }}"
{{ end -}}
{{- range $i, $binding := $vhost.bindings }}
---
apiVersion: rabbitmq.com/v1beta1
kind: Binding
metadata:
  name: "subsribe-{{ $binding.destination }}-to-{{ $binding.source }}"
  namespace: "{{ $namespace }}"
spec:
  source: "{{ $binding.source }}"
  destination: "{{ $binding.destination }}"
  destinationType: "{{ $binding.destinationType | default "queue" }}"
  routingKey: "{{ $binding.routingKey | default "#" }}"
  rabbitmqClusterReference:
    name: "{{ $cluster }}"
    namespace: "{{ $namespace }}"
  vhost: "{{ $vhost.name }}"
{{ end -}}
{{- range $i, $user := $vhost.users }}
---
apiVersion: v1
kind: Secret
metadata:
  namespace: "{{ $namespace }}"
  name: "{{ $user.username }}-message-broker-creds"
data:
  "username": "{{ $user.username | b64enc }}"
  "password": "{{ $user.password | b64enc }}"
---
apiVersion: rabbitmq.com/v1beta1
kind: User
metadata:
  name: "{{ $user.username }}"
  namespace: "{{ $namespace }}"
spec:
  tags: []
  rabbitmqClusterReference:
    name: "{{ $cluster }}"
    namespace: "{{ $namespace }}"
  importCredentialsSecret:
    name: "{{ $user.username }}-message-broker-creds"
---
apiVersion: rabbitmq.com/v1beta1
kind: Permission
metadata:
  name: "{{ $user.username }}"
  namespace: "{{ $namespace }}"
spec:
  user: "{{ $user.username }}"
  permissions:
    read: "{{  $user.readPermissions }}"
    write: "{{ $user.writePermissions }}"
    configure: "{{ $user.configurePermissions }}"
  rabbitmqClusterReference:
    name: "{{ $cluster }}"
    namespace: "{{ $namespace }}"
  vhost: "{{ $vhost.name }}"
{{ end -}}
{{ end -}}